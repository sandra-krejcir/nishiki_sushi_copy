import {
  require_prop_types
} from "./chunk-QHQIRQ63.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-56ZEU346.js";

// node_modules/lodash.once/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.once/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function before(n, func) {
      var result;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = void 0;
        }
        return result;
      };
    }
    function once2(func) {
      return before(2, func);
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = once2;
  }
});

// node_modules/react-calendar/dist/esm/Calendar.js
var import_react20 = __toESM(require_react());
var import_prop_types16 = __toESM(require_prop_types());

// node_modules/merge-class-names/dist/esm/index.js
function mergeClassNames() {
  return Array.prototype.slice.call(arguments).reduce(function(classList, arg) {
    return classList.concat(arg);
  }, []).filter(function(arg) {
    return typeof arg === "string";
  }).join(" ");
}

// node_modules/react-calendar/dist/esm/Calendar/Navigation.js
var import_react = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());

// node_modules/get-user-locale/dist/esm/index.js
var import_lodash = __toESM(require_lodash());
function filterDuplicates(arr) {
  return arr.filter(function(el, index, self) {
    return self.indexOf(el) === index;
  });
}
function fixLowercaseProperties(arr) {
  return arr.map(function(el) {
    if (!el || el.indexOf("-") === -1 || el.toLowerCase() !== el) {
      return el;
    }
    var splitEl = el.split("-");
    return "".concat(splitEl[0], "-").concat(splitEl[1].toUpperCase());
  });
}
function getUserLocalesInternal() {
  var languageList = [];
  if (typeof window !== "undefined") {
    if (window.navigator.languages) {
      languageList = languageList.concat(window.navigator.languages);
    }
    if (window.navigator.language) {
      languageList.push(window.navigator.language);
    }
    if (window.navigator.userLanguage) {
      languageList.push(window.navigator.userLanguage);
    }
    if (window.navigator.browserLanguage) {
      languageList.push(window.navigator.browserLanguage);
    }
    if (window.navigator.systemLanguage) {
      languageList.push(window.navigator.systemLanguage);
    }
  }
  languageList.push("en-US");
  return fixLowercaseProperties(filterDuplicates(languageList));
}
var getUserLocales = (0, import_lodash.default)(getUserLocalesInternal);
function getUserLocaleInternal() {
  return getUserLocales()[0];
}
var getUserLocale = (0, import_lodash.default)(getUserLocaleInternal);
var esm_default = getUserLocale;

// node_modules/@wojtekmaj/date-utils/dist/esm/index.js
function makeGetEdgeOfNeighbor(getPeriod, getEdgeOfPeriod, defaultOffset) {
  return function makeGetEdgeOfNeighborInternal(date) {
    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOffset;
    var previousPeriod = getPeriod(date) + offset;
    return getEdgeOfPeriod(previousPeriod);
  };
}
function makeGetEnd(getBeginOfNextPeriod) {
  return function makeGetEndInternal(date) {
    return new Date(getBeginOfNextPeriod(date).getTime() - 1);
  };
}
function makeGetRange(functions) {
  return function makeGetRangeInternal(date) {
    return functions.map(function(fn) {
      return fn(date);
    });
  };
}
function getYear(date) {
  if (date instanceof Date) {
    return date.getFullYear();
  }
  if (typeof date === "number") {
    return date;
  }
  var year = parseInt(date, 10);
  if (typeof date === "string" && !isNaN(year)) {
    return year;
  }
  throw new Error("Failed to get year from date: ".concat(date, "."));
}
function getMonth(date) {
  if (date instanceof Date) {
    return date.getMonth();
  }
  throw new Error("Failed to get month from date: ".concat(date, "."));
}
function getDate(date) {
  if (date instanceof Date) {
    return date.getDate();
  }
  throw new Error("Failed to get year from date: ".concat(date, "."));
}
function getCenturyStart(date) {
  var year = getYear(date);
  var centuryStartYear = year + (-year + 1) % 100;
  var centuryStartDate = new Date();
  centuryStartDate.setFullYear(centuryStartYear, 0, 1);
  centuryStartDate.setHours(0, 0, 0, 0);
  return centuryStartDate;
}
var getPreviousCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, -100);
var getNextCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, 100);
var getCenturyEnd = makeGetEnd(getNextCenturyStart);
var getPreviousCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, -100);
var getNextCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, 100);
var getCenturyRange = makeGetRange([getCenturyStart, getCenturyEnd]);
function getDecadeStart(date) {
  var year = getYear(date);
  var decadeStartYear = year + (-year + 1) % 10;
  var decadeStartDate = new Date();
  decadeStartDate.setFullYear(decadeStartYear, 0, 1);
  decadeStartDate.setHours(0, 0, 0, 0);
  return decadeStartDate;
}
var getPreviousDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, -10);
var getNextDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, 10);
var getDecadeEnd = makeGetEnd(getNextDecadeStart);
var getPreviousDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, -10);
var getNextDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, 10);
var getDecadeRange = makeGetRange([getDecadeStart, getDecadeEnd]);
function getYearStart(date) {
  var year = getYear(date);
  var yearStartDate = new Date();
  yearStartDate.setFullYear(year, 0, 1);
  yearStartDate.setHours(0, 0, 0, 0);
  return yearStartDate;
}
var getPreviousYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, -1);
var getNextYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, 1);
var getYearEnd = makeGetEnd(getNextYearStart);
var getPreviousYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, -1);
var getNextYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, 1);
var getYearRange = makeGetRange([getYearStart, getYearEnd]);
function makeGetEdgeOfNeighborMonth(getEdgeOfPeriod, defaultOffset) {
  return function makeGetEdgeOfNeighborMonthInternal(date) {
    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOffset;
    var year = getYear(date);
    var month = getMonth(date) + offset;
    var previousPeriod = new Date();
    previousPeriod.setFullYear(year, month, 1);
    previousPeriod.setHours(0, 0, 0, 0);
    return getEdgeOfPeriod(previousPeriod);
  };
}
function getMonthStart(date) {
  var year = getYear(date);
  var month = getMonth(date);
  var monthStartDate = new Date();
  monthStartDate.setFullYear(year, month, 1);
  monthStartDate.setHours(0, 0, 0, 0);
  return monthStartDate;
}
var getPreviousMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, -1);
var getNextMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, 1);
var getMonthEnd = makeGetEnd(getNextMonthStart);
var getPreviousMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, -1);
var getNextMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, 1);
var getMonthRange = makeGetRange([getMonthStart, getMonthEnd]);
function makeGetEdgeOfNeighborDay(getEdgeOfPeriod, defaultOffset) {
  return function makeGetEdgeOfNeighborDayInternal(date) {
    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultOffset;
    var year = getYear(date);
    var month = getMonth(date);
    var day = getDate(date) + offset;
    var previousPeriod = new Date();
    previousPeriod.setFullYear(year, month, day);
    previousPeriod.setHours(0, 0, 0, 0);
    return getEdgeOfPeriod(previousPeriod);
  };
}
function getDayStart(date) {
  var year = getYear(date);
  var month = getMonth(date);
  var day = getDate(date);
  var dayStartDate = new Date();
  dayStartDate.setFullYear(year, month, day);
  dayStartDate.setHours(0, 0, 0, 0);
  return dayStartDate;
}
var getPreviousDayStart = makeGetEdgeOfNeighborDay(getDayStart, -1);
var getNextDayStart = makeGetEdgeOfNeighborDay(getDayStart, 1);
var getDayEnd = makeGetEnd(getNextDayStart);
var getPreviousDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, -1);
var getNextDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, 1);
var getDayRange = makeGetRange([getDayStart, getDayEnd]);
function getDaysInMonth(date) {
  return getDate(getMonthEnd(date));
}

// node_modules/react-calendar/dist/esm/shared/const.js
var _CALENDAR_TYPE_LOCALE;
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var CALENDAR_TYPES = {
  ARABIC: "Arabic",
  HEBREW: "Hebrew",
  ISO_8601: "ISO 8601",
  US: "US"
};
var CALENDAR_TYPE_LOCALES = (_CALENDAR_TYPE_LOCALE = {}, _defineProperty(_CALENDAR_TYPE_LOCALE, CALENDAR_TYPES.US, ["en-CA", "en-US", "es-AR", "es-BO", "es-CL", "es-CO", "es-CR", "es-DO", "es-EC", "es-GT", "es-HN", "es-MX", "es-NI", "es-PA", "es-PE", "es-PR", "es-SV", "es-VE", "pt-BR"]), _defineProperty(_CALENDAR_TYPE_LOCALE, CALENDAR_TYPES.ARABIC, [
  "ar",
  "ar-AE",
  "ar-BH",
  "ar-DZ",
  "ar-EG",
  "ar-IQ",
  "ar-JO",
  "ar-KW",
  "ar-LY",
  "ar-OM",
  "ar-QA",
  "ar-SA",
  "ar-SD",
  "ar-SY",
  "ar-YE",
  "dv",
  "dv-MV",
  "ps",
  "ps-AR"
]), _defineProperty(_CALENDAR_TYPE_LOCALE, CALENDAR_TYPES.HEBREW, ["he", "he-IL"]), _CALENDAR_TYPE_LOCALE);
var WEEKDAYS = _toConsumableArray(Array(7)).map(function(el, index) {
  return index;
});

// node_modules/react-calendar/dist/esm/shared/dateFormatter.js
var formatterCache = /* @__PURE__ */ new Map();
function getFormatter(options) {
  return function(locale, date) {
    var localeWithDefault = locale || esm_default();
    if (!formatterCache.has(localeWithDefault)) {
      formatterCache.set(localeWithDefault, /* @__PURE__ */ new Map());
    }
    var formatterCacheLocale = formatterCache.get(localeWithDefault);
    if (!formatterCacheLocale.has(options)) {
      formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);
    }
    return formatterCacheLocale.get(options)(date);
  };
}
function toSafeHour(date) {
  var safeDate = new Date(date);
  return new Date(safeDate.setHours(12));
}
function getSafeFormatter(options) {
  return function(locale, date) {
    return getFormatter(options)(locale, toSafeHour(date));
  };
}
var formatDateOptions = {
  day: "numeric",
  month: "numeric",
  year: "numeric"
};
var formatDayOptions = {
  day: "numeric"
};
var formatLongDateOptions = {
  day: "numeric",
  month: "long",
  year: "numeric"
};
var formatMonthOptions = {
  month: "long"
};
var formatMonthYearOptions = {
  month: "long",
  year: "numeric"
};
var formatShortWeekdayOptions = {
  weekday: "short"
};
var formatWeekdayOptions = {
  weekday: "long"
};
var formatYearOptions = {
  year: "numeric"
};
var formatDate = getSafeFormatter(formatDateOptions);
var formatDay = getSafeFormatter(formatDayOptions);
var formatLongDate = getSafeFormatter(formatLongDateOptions);
var formatMonth = getSafeFormatter(formatMonthOptions);
var formatMonthYear = getSafeFormatter(formatMonthYearOptions);
var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);
var formatWeekday = getSafeFormatter(formatWeekdayOptions);
var formatYear = getSafeFormatter(formatYearOptions);

// node_modules/react-calendar/dist/esm/shared/dates.js
var SUNDAY = WEEKDAYS[0];
var FRIDAY = WEEKDAYS[5];
var SATURDAY = WEEKDAYS[6];
function getDayOfWeek(date) {
  var calendarType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : CALENDAR_TYPES.ISO_8601;
  var weekday = date.getDay();
  switch (calendarType) {
    case CALENDAR_TYPES.ISO_8601:
      return (weekday + 6) % 7;
    case CALENDAR_TYPES.ARABIC:
      return (weekday + 1) % 7;
    case CALENDAR_TYPES.HEBREW:
    case CALENDAR_TYPES.US:
      return weekday;
    default:
      throw new Error("Unsupported calendar type.");
  }
}
function getBeginOfCenturyYear(date) {
  var beginOfCentury = getCenturyStart(date);
  return getYear(beginOfCentury);
}
function getBeginOfDecadeYear(date) {
  var beginOfDecade = getDecadeStart(date);
  return getYear(beginOfDecade);
}
function getBeginOfWeek(date) {
  var calendarType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : CALENDAR_TYPES.ISO_8601;
  var year = getYear(date);
  var monthIndex = getMonth(date);
  var day = date.getDate() - getDayOfWeek(date, calendarType);
  return new Date(year, monthIndex, day);
}
function getWeekNumber(date) {
  var calendarType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : CALENDAR_TYPES.ISO_8601;
  var calendarTypeForWeekNumber = calendarType === CALENDAR_TYPES.US ? CALENDAR_TYPES.US : CALENDAR_TYPES.ISO_8601;
  var beginOfWeek = getBeginOfWeek(date, calendarType);
  var year = getYear(date) + 1;
  var dayInWeekOne;
  var beginOfFirstWeek;
  do {
    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === CALENDAR_TYPES.ISO_8601 ? 4 : 1);
    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarType);
    year -= 1;
  } while (date < beginOfFirstWeek);
  return Math.round((beginOfWeek - beginOfFirstWeek) / (864e5 * 7)) + 1;
}
function getBegin(rangeType, date) {
  switch (rangeType) {
    case "century":
      return getCenturyStart(date);
    case "decade":
      return getDecadeStart(date);
    case "year":
      return getYearStart(date);
    case "month":
      return getMonthStart(date);
    case "day":
      return getDayStart(date);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
}
function getBeginPrevious(rangeType, date) {
  switch (rangeType) {
    case "century":
      return getPreviousCenturyStart(date);
    case "decade":
      return getPreviousDecadeStart(date);
    case "year":
      return getPreviousYearStart(date);
    case "month":
      return getPreviousMonthStart(date);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
}
function getBeginNext(rangeType, date) {
  switch (rangeType) {
    case "century":
      return getNextCenturyStart(date);
    case "decade":
      return getNextDecadeStart(date);
    case "year":
      return getNextYearStart(date);
    case "month":
      return getNextMonthStart(date);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
}
var getBeginPrevious2 = function getBeginPrevious22(rangeType, date) {
  switch (rangeType) {
    case "decade":
      return getPreviousDecadeStart(date, -100);
    case "year":
      return getPreviousYearStart(date, -10);
    case "month":
      return getPreviousMonthStart(date, -12);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
};
var getBeginNext2 = function getBeginNext22(rangeType, date) {
  switch (rangeType) {
    case "decade":
      return getNextDecadeStart(date, 100);
    case "year":
      return getNextYearStart(date, 10);
    case "month":
      return getNextMonthStart(date, 12);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
};
function getEnd(rangeType, date) {
  switch (rangeType) {
    case "century":
      return getCenturyEnd(date);
    case "decade":
      return getDecadeEnd(date);
    case "year":
      return getYearEnd(date);
    case "month":
      return getMonthEnd(date);
    case "day":
      return getDayEnd(date);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
}
function getEndPrevious(rangeType, date) {
  switch (rangeType) {
    case "century":
      return getPreviousCenturyEnd(date);
    case "decade":
      return getPreviousDecadeEnd(date);
    case "year":
      return getPreviousYearEnd(date);
    case "month":
      return getPreviousMonthEnd(date);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
}
var getEndPrevious2 = function getEndPrevious22(rangeType, date) {
  switch (rangeType) {
    case "decade":
      return getPreviousDecadeEnd(date, -100);
    case "year":
      return getPreviousYearEnd(date, -10);
    case "month":
      return getPreviousMonthEnd(date, -12);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
};
function getRange(rangeType, date) {
  switch (rangeType) {
    case "century":
      return getCenturyRange(date);
    case "decade":
      return getDecadeRange(date);
    case "year":
      return getYearRange(date);
    case "month":
      return getMonthRange(date);
    case "day":
      return getDayRange(date);
    default:
      throw new Error("Invalid rangeType: ".concat(rangeType));
  }
}
function getValueRange(rangeType, date1, date2) {
  var rawNextValue = [date1, date2].sort(function(a, b) {
    return a - b;
  });
  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];
}
function toYearLabel(locale) {
  var formatYear2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : formatYear;
  var dates = arguments.length > 2 ? arguments[2] : void 0;
  return dates.map(function(date) {
    return formatYear2(locale, date);
  }).join(" \u2013 ");
}
function getCenturyLabel(locale, formatYear2, date) {
  return toYearLabel(locale, formatYear2, getCenturyRange(date));
}
function getDecadeLabel(locale, formatYear2, date) {
  return toYearLabel(locale, formatYear2, getDecadeRange(date));
}
function isWeekend(date) {
  var calendarType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : CALENDAR_TYPES.ISO_8601;
  var weekday = date.getDay();
  switch (calendarType) {
    case CALENDAR_TYPES.ARABIC:
    case CALENDAR_TYPES.HEBREW:
      return weekday === FRIDAY || weekday === SATURDAY;
    case CALENDAR_TYPES.ISO_8601:
    case CALENDAR_TYPES.US:
      return weekday === SATURDAY || weekday === SUNDAY;
    default:
      throw new Error("Unsupported calendar type.");
  }
}

// node_modules/react-calendar/dist/esm/shared/propTypes.js
var import_prop_types = __toESM(require_prop_types());
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
var calendarTypes = Object.values(CALENDAR_TYPES);
var allViews = ["century", "decade", "year", "month"];
var isCalendarType = import_prop_types.default.oneOf(calendarTypes);
var isClassName = import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]);
var isMinDate = function isMinDate2(props, propName, componentName) {
  var minDate = props[propName];
  if (!minDate) {
    return null;
  }
  if (!(minDate instanceof Date)) {
    return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof(minDate), "` supplied to `").concat(componentName, "`, expected instance of `Date`."));
  }
  var maxDate = props.maxDate;
  if (maxDate && minDate > maxDate) {
    return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof(minDate), "` supplied to `").concat(componentName, "`, minDate cannot be larger than maxDate."));
  }
  return null;
};
var isMaxDate = function isMaxDate2(props, propName, componentName) {
  var maxDate = props[propName];
  if (!maxDate) {
    return null;
  }
  if (!(maxDate instanceof Date)) {
    return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof(maxDate), "` supplied to `").concat(componentName, "`, expected instance of `Date`."));
  }
  var minDate = props.minDate;
  if (minDate && maxDate < minDate) {
    return new Error("Invalid prop `".concat(propName, "` of type `").concat(_typeof(maxDate), "` supplied to `").concat(componentName, "`, maxDate cannot be smaller than minDate."));
  }
  return null;
};
var isRef = import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.shape({
  current: import_prop_types.default.any
})]);
var isValue = import_prop_types.default.oneOfType([import_prop_types.default.instanceOf(Date), import_prop_types.default.arrayOf(import_prop_types.default.instanceOf(Date))]);
var isViews = import_prop_types.default.arrayOf(import_prop_types.default.oneOf(allViews));
var isView = function isView2(props, propName, componentName) {
  var view = props[propName];
  var views = props.views;
  var allowedViews = views || allViews;
  if (view !== void 0 && allowedViews.indexOf(view) === -1) {
    return new Error("Invalid prop `".concat(propName, "` of value `").concat(view, "` supplied to `").concat(componentName, "`, expected one of [").concat(allowedViews.map(function(a) {
      return '"'.concat(a, '"');
    }).join(", "), "]."));
  }
  return null;
};
isView.isRequired = function(props, propName, componentName) {
  var view = props[propName];
  if (!view) {
    return new Error("The prop `".concat(propName, "` is marked as required in `").concat(componentName, "`, but its value is `").concat(view, "`."));
  }
  return isView(props, propName, componentName);
};
var tileGroupProps = {
  activeStartDate: import_prop_types.default.instanceOf(Date).isRequired,
  hover: import_prop_types.default.instanceOf(Date),
  locale: import_prop_types.default.string,
  maxDate: isMaxDate,
  minDate: isMinDate,
  onClick: import_prop_types.default.func,
  onMouseOver: import_prop_types.default.func,
  tileClassName: import_prop_types.default.oneOfType([import_prop_types.default.func, isClassName]),
  tileContent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.node]),
  value: isValue,
  valueType: import_prop_types.default.string
};
var tileProps = {
  activeStartDate: import_prop_types.default.instanceOf(Date).isRequired,
  classes: import_prop_types.default.arrayOf(import_prop_types.default.string).isRequired,
  date: import_prop_types.default.instanceOf(Date).isRequired,
  locale: import_prop_types.default.string,
  maxDate: isMaxDate,
  minDate: isMinDate,
  onClick: import_prop_types.default.func,
  onMouseOver: import_prop_types.default.func,
  style: import_prop_types.default.objectOf(import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.number])),
  tileClassName: import_prop_types.default.oneOfType([import_prop_types.default.func, isClassName]),
  tileContent: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.node]),
  tileDisabled: import_prop_types.default.func
};

// node_modules/react-calendar/dist/esm/Calendar/Navigation.js
var className = "react-calendar__navigation";
function Navigation(_ref) {
  var activeStartDate = _ref.activeStartDate, drillUp = _ref.drillUp, _ref$formatMonthYear = _ref.formatMonthYear, formatMonthYear2 = _ref$formatMonthYear === void 0 ? formatMonthYear : _ref$formatMonthYear, _ref$formatYear = _ref.formatYear, formatYear2 = _ref$formatYear === void 0 ? formatYear : _ref$formatYear, locale = _ref.locale, maxDate = _ref.maxDate, minDate = _ref.minDate, _ref$navigationAriaLa = _ref.navigationAriaLabel, navigationAriaLabel = _ref$navigationAriaLa === void 0 ? "" : _ref$navigationAriaLa, navigationAriaLive = _ref.navigationAriaLive, navigationLabel = _ref.navigationLabel, _ref$next2AriaLabel = _ref.next2AriaLabel, next2AriaLabel = _ref$next2AriaLabel === void 0 ? "" : _ref$next2AriaLabel, _ref$next2Label = _ref.next2Label, next2Label = _ref$next2Label === void 0 ? "\xBB" : _ref$next2Label, _ref$nextAriaLabel = _ref.nextAriaLabel, nextAriaLabel = _ref$nextAriaLabel === void 0 ? "" : _ref$nextAriaLabel, _ref$nextLabel = _ref.nextLabel, nextLabel = _ref$nextLabel === void 0 ? "\u203A" : _ref$nextLabel, _ref$prev2AriaLabel = _ref.prev2AriaLabel, prev2AriaLabel = _ref$prev2AriaLabel === void 0 ? "" : _ref$prev2AriaLabel, _ref$prev2Label = _ref.prev2Label, prev2Label = _ref$prev2Label === void 0 ? "\xAB" : _ref$prev2Label, _ref$prevAriaLabel = _ref.prevAriaLabel, prevAriaLabel = _ref$prevAriaLabel === void 0 ? "" : _ref$prevAriaLabel, _ref$prevLabel = _ref.prevLabel, prevLabel = _ref$prevLabel === void 0 ? "\u2039" : _ref$prevLabel, setActiveStartDate = _ref.setActiveStartDate, showDoubleView = _ref.showDoubleView, view = _ref.view, views = _ref.views;
  var drillUpAvailable = views.indexOf(view) > 0;
  var shouldShowPrevNext2Buttons = view !== "century";
  var previousActiveStartDate = getBeginPrevious(view, activeStartDate);
  var previousActiveStartDate2 = shouldShowPrevNext2Buttons && getBeginPrevious2(view, activeStartDate);
  var nextActiveStartDate = getBeginNext(view, activeStartDate);
  var nextActiveStartDate2 = shouldShowPrevNext2Buttons && getBeginNext2(view, activeStartDate);
  var prevButtonDisabled = function() {
    if (previousActiveStartDate.getFullYear() < 0) {
      return true;
    }
    var previousActiveEndDate = getEndPrevious(view, activeStartDate);
    return minDate && minDate >= previousActiveEndDate;
  }();
  var prev2ButtonDisabled = shouldShowPrevNext2Buttons && function() {
    if (previousActiveStartDate2.getFullYear() < 0) {
      return true;
    }
    var previousActiveEndDate = getEndPrevious2(view, activeStartDate);
    return minDate && minDate >= previousActiveEndDate;
  }();
  var nextButtonDisabled = maxDate && maxDate < nextActiveStartDate;
  var next2ButtonDisabled = shouldShowPrevNext2Buttons && maxDate && maxDate < nextActiveStartDate2;
  function onClickPrevious() {
    setActiveStartDate(previousActiveStartDate, "prev");
  }
  function onClickPrevious2() {
    setActiveStartDate(previousActiveStartDate2, "prev2");
  }
  function onClickNext() {
    setActiveStartDate(nextActiveStartDate, "next");
  }
  function onClickNext2() {
    setActiveStartDate(nextActiveStartDate2, "next2");
  }
  function renderLabel(date) {
    var label = function() {
      switch (view) {
        case "century":
          return getCenturyLabel(locale, formatYear2, date);
        case "decade":
          return getDecadeLabel(locale, formatYear2, date);
        case "year":
          return formatYear2(locale, date);
        case "month":
          return formatMonthYear2(locale, date);
        default:
          throw new Error("Invalid view: ".concat(view, "."));
      }
    }();
    return navigationLabel ? navigationLabel({
      date,
      label,
      locale: locale || getUserLocale(),
      view
    }) : label;
  }
  function renderButton() {
    var labelClassName = "".concat(className, "__label");
    return import_react.default.createElement("button", {
      "aria-label": navigationAriaLabel,
      "aria-live": navigationAriaLive,
      className: labelClassName,
      disabled: !drillUpAvailable,
      onClick: drillUp,
      style: {
        flexGrow: 1
      },
      type: "button"
    }, import_react.default.createElement("span", {
      className: "".concat(labelClassName, "__labelText ").concat(labelClassName, "__labelText--from")
    }, renderLabel(activeStartDate)), showDoubleView && import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("span", {
      className: "".concat(labelClassName, "__divider")
    }, " \u2013 "), import_react.default.createElement("span", {
      className: "".concat(labelClassName, "__labelText ").concat(labelClassName, "__labelText--to")
    }, renderLabel(nextActiveStartDate))));
  }
  return import_react.default.createElement("div", {
    className
  }, prev2Label !== null && shouldShowPrevNext2Buttons && import_react.default.createElement("button", {
    "aria-label": prev2AriaLabel,
    className: "".concat(className, "__arrow ").concat(className, "__prev2-button"),
    disabled: prev2ButtonDisabled,
    onClick: onClickPrevious2,
    type: "button"
  }, prev2Label), prevLabel !== null && import_react.default.createElement("button", {
    "aria-label": prevAriaLabel,
    className: "".concat(className, "__arrow ").concat(className, "__prev-button"),
    disabled: prevButtonDisabled,
    onClick: onClickPrevious,
    type: "button"
  }, prevLabel), renderButton(), nextLabel !== null && import_react.default.createElement("button", {
    "aria-label": nextAriaLabel,
    className: "".concat(className, "__arrow ").concat(className, "__next-button"),
    disabled: nextButtonDisabled,
    onClick: onClickNext,
    type: "button"
  }, nextLabel), next2Label !== null && shouldShowPrevNext2Buttons && import_react.default.createElement("button", {
    "aria-label": next2AriaLabel,
    className: "".concat(className, "__arrow ").concat(className, "__next2-button"),
    disabled: next2ButtonDisabled,
    onClick: onClickNext2,
    type: "button"
  }, next2Label));
}
Navigation.propTypes = {
  activeStartDate: import_prop_types2.default.instanceOf(Date).isRequired,
  drillUp: import_prop_types2.default.func.isRequired,
  formatMonthYear: import_prop_types2.default.func,
  formatYear: import_prop_types2.default.func,
  locale: import_prop_types2.default.string,
  maxDate: import_prop_types2.default.instanceOf(Date),
  minDate: import_prop_types2.default.instanceOf(Date),
  navigationAriaLabel: import_prop_types2.default.string,
  navigationAriaLive: import_prop_types2.default.string,
  navigationLabel: import_prop_types2.default.func,
  next2AriaLabel: import_prop_types2.default.string,
  next2Label: import_prop_types2.default.node,
  nextAriaLabel: import_prop_types2.default.string,
  nextLabel: import_prop_types2.default.node,
  prev2AriaLabel: import_prop_types2.default.string,
  prev2Label: import_prop_types2.default.node,
  prevAriaLabel: import_prop_types2.default.string,
  prevLabel: import_prop_types2.default.node,
  setActiveStartDate: import_prop_types2.default.func.isRequired,
  showDoubleView: import_prop_types2.default.bool,
  view: isView.isRequired,
  views: isViews.isRequired
};

// node_modules/react-calendar/dist/esm/CenturyView.js
var import_react7 = __toESM(require_react());

// node_modules/react-calendar/dist/esm/CenturyView/Decades.js
var import_react6 = __toESM(require_react());

// node_modules/react-calendar/dist/esm/TileGroup.js
var import_react3 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());

// node_modules/react-calendar/dist/esm/Flex.js
var import_react2 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());
var _excluded = ["children", "className", "direction", "count", "offset", "style", "wrap"];
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function toPercent(num) {
  return "".concat(num, "%");
}
function Flex(_ref) {
  var children = _ref.children, className8 = _ref.className, direction = _ref.direction, count = _ref.count, offset = _ref.offset, style = _ref.style, wrap = _ref.wrap, otherProps = _objectWithoutProperties(_ref, _excluded);
  return import_react2.default.createElement("div", _extends({
    className: className8,
    style: _objectSpread({
      display: "flex",
      flexDirection: direction,
      flexWrap: wrap ? "wrap" : "no-wrap"
    }, style)
  }, otherProps), import_react2.default.Children.map(children, function(child, index) {
    return import_react2.default.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {
      style: {
        flexBasis: toPercent(100 / count),
        flexShrink: 0,
        flexGrow: 0,
        overflow: "hidden",
        marginLeft: offset && index === 0 ? toPercent(100 * offset / count) : null
      }
    }));
  }));
}
Flex.propTypes = {
  children: import_prop_types3.default.node,
  className: import_prop_types3.default.string,
  count: import_prop_types3.default.number.isRequired,
  direction: import_prop_types3.default.string,
  offset: import_prop_types3.default.number,
  style: import_prop_types3.default.objectOf(import_prop_types3.default.oneOfType([import_prop_types3.default.string, import_prop_types3.default.number])),
  wrap: import_prop_types3.default.bool
};

// node_modules/react-calendar/dist/esm/shared/utils.js
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function between(value, min, max) {
  if (min && min > value) {
    return min;
  }
  if (max && max < value) {
    return max;
  }
  return value;
}
function isValueWithinRange(value, range) {
  return range[0] <= value && range[1] >= value;
}
function isRangeWithinRange(greaterRange, smallerRange) {
  return greaterRange[0] <= smallerRange[0] && greaterRange[1] >= smallerRange[1];
}
function doRangesOverlap(range1, range2) {
  return isValueWithinRange(range1[0], range2) || isValueWithinRange(range1[1], range2);
}
function getRangeClassNames(valueRange, dateRange, baseClassName2) {
  var isRange = doRangesOverlap(dateRange, valueRange);
  var classes = [];
  if (isRange) {
    classes.push(baseClassName2);
    var isRangeStart = isValueWithinRange(valueRange[0], dateRange);
    var isRangeEnd = isValueWithinRange(valueRange[1], dateRange);
    if (isRangeStart) {
      classes.push("".concat(baseClassName2, "Start"));
    }
    if (isRangeEnd) {
      classes.push("".concat(baseClassName2, "End"));
    }
    if (isRangeStart && isRangeEnd) {
      classes.push("".concat(baseClassName2, "BothEnds"));
    }
  }
  return classes;
}
function getTileClasses() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, value = _ref.value, valueType = _ref.valueType, date = _ref.date, dateType = _ref.dateType, hover = _ref.hover;
  var className8 = "react-calendar__tile";
  var classes = [className8];
  if (!date) {
    return classes;
  }
  if (!Array.isArray(date) && !dateType) {
    throw new Error("getTileClasses(): Unable to get tile activity classes because one or more required arguments were not passed.");
  }
  var now = new Date();
  var dateRange = Array.isArray(date) ? date : getRange(dateType, date);
  if (isValueWithinRange(now, dateRange)) {
    classes.push("".concat(className8, "--now"));
  }
  if (!value) {
    return classes;
  }
  if (!Array.isArray(value) && !valueType) {
    throw new Error("getTileClasses(): Unable to get tile activity classes because one or more required arguments were not passed.");
  }
  var valueRange = Array.isArray(value) ? value : getRange(valueType, value);
  if (isRangeWithinRange(valueRange, dateRange)) {
    classes.push("".concat(className8, "--active"));
  } else if (doRangesOverlap(valueRange, dateRange)) {
    classes.push("".concat(className8, "--hasActive"));
  }
  var valueRangeClassNames = getRangeClassNames(valueRange, dateRange, "".concat(className8, "--range"));
  classes.push.apply(classes, _toConsumableArray2(valueRangeClassNames));
  var valueArray = [].concat(value);
  if (hover && valueArray.length === 1) {
    var hoverRange = hover > valueRange[0] ? [valueRange[0], hover] : [hover, valueRange[0]];
    var hoverRangeClassNames = getRangeClassNames(hoverRange, dateRange, "".concat(className8, "--hover"));
    classes.push.apply(classes, _toConsumableArray2(hoverRangeClassNames));
  }
  return classes;
}

// node_modules/react-calendar/dist/esm/TileGroup.js
var _excluded2 = ["className", "count", "dateTransform", "dateType", "end", "hover", "offset", "start", "step", "tile", "value", "valueType"];
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty3(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function TileGroup(_ref) {
  var className8 = _ref.className, _ref$count = _ref.count, count = _ref$count === void 0 ? 3 : _ref$count, dateTransform = _ref.dateTransform, dateType = _ref.dateType, end = _ref.end, hover = _ref.hover, offset = _ref.offset, start = _ref.start, _ref$step = _ref.step, step = _ref$step === void 0 ? 1 : _ref$step, Tile2 = _ref.tile, value = _ref.value, valueType = _ref.valueType, tileProps2 = _objectWithoutProperties2(_ref, _excluded2);
  var tiles = [];
  for (var point = start; point <= end; point += step) {
    var date = dateTransform(point);
    tiles.push(import_react3.default.createElement(Tile2, _extends2({
      key: date.getTime(),
      classes: getTileClasses({
        value,
        valueType,
        date,
        dateType,
        hover
      }),
      date,
      point
    }, tileProps2)));
  }
  return import_react3.default.createElement(Flex, {
    className: className8,
    count,
    offset,
    wrap: true
  }, tiles);
}
TileGroup.propTypes = _objectSpread2(_objectSpread2({}, tileGroupProps), {}, {
  activeStartDate: import_prop_types4.default.instanceOf(Date),
  count: import_prop_types4.default.number,
  dateTransform: import_prop_types4.default.func.isRequired,
  dateType: import_prop_types4.default.string,
  offset: import_prop_types4.default.number,
  step: import_prop_types4.default.number,
  tile: import_prop_types4.default.func.isRequired
});

// node_modules/react-calendar/dist/esm/CenturyView/Decade.js
var import_react5 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());

// node_modules/react-calendar/dist/esm/Tile.js
var import_react4 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys3(Object(source), true).forEach(function(key) {
      _defineProperty4(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys3(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof2(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _defineProperty4(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function datesAreDifferent(date1, date2) {
  return date1 && !date2 || !date1 && date2 || date1 && date2 && date1.getTime() !== date2.getTime();
}
function getValue(nextProps, prop) {
  var activeStartDate = nextProps.activeStartDate, date = nextProps.date, view = nextProps.view;
  return typeof prop === "function" ? prop({
    activeStartDate,
    date,
    view
  }) : prop;
}
var Tile = function(_Component) {
  _inherits(Tile2, _Component);
  var _super = _createSuper(Tile2);
  function Tile2() {
    var _this;
    _classCallCheck(this, Tile2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty4(_assertThisInitialized(_this), "state", {});
    return _this;
  }
  _createClass(Tile2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, activeStartDate = _this$props.activeStartDate, children = _this$props.children, classes = _this$props.classes, date = _this$props.date, formatAbbr = _this$props.formatAbbr, locale = _this$props.locale, maxDate = _this$props.maxDate, maxDateTransform = _this$props.maxDateTransform, minDate = _this$props.minDate, minDateTransform = _this$props.minDateTransform, onClick = _this$props.onClick, onMouseOver = _this$props.onMouseOver, style = _this$props.style, tileDisabled = _this$props.tileDisabled, view = _this$props.view;
      var _this$state = this.state, tileClassName = _this$state.tileClassName, tileContent = _this$state.tileContent;
      return import_react4.default.createElement("button", {
        className: mergeClassNames(classes, tileClassName),
        disabled: minDate && minDateTransform(minDate) > date || maxDate && maxDateTransform(maxDate) < date || tileDisabled && tileDisabled({
          activeStartDate,
          date,
          view
        }),
        onClick: onClick && function(event) {
          return onClick(date, event);
        },
        onFocus: onMouseOver && function() {
          return onMouseOver(date);
        },
        onMouseOver: onMouseOver && function() {
          return onMouseOver(date);
        },
        style,
        type: "button"
      }, formatAbbr ? import_react4.default.createElement("abbr", {
        "aria-label": formatAbbr(locale, date)
      }, children) : children, tileContent);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var activeStartDate = nextProps.activeStartDate, tileClassName = nextProps.tileClassName, tileContent = nextProps.tileContent;
      var nextState = {};
      if (tileClassName !== prevState.tileClassNameProps || datesAreDifferent(activeStartDate, prevState.activeStartDateProps)) {
        nextState.tileClassName = getValue(nextProps, tileClassName);
        nextState.tileClassNameProps = tileClassName;
      }
      if (tileContent !== prevState.tileContentProps || datesAreDifferent(activeStartDate, prevState.activeStartDateProps)) {
        nextState.tileContent = getValue(nextProps, tileContent);
        nextState.tileContentProps = tileContent;
      }
      nextState.activeStartDateProps = activeStartDate;
      return nextState;
    }
  }]);
  return Tile2;
}(import_react4.Component);
Tile.propTypes = _objectSpread3(_objectSpread3({}, tileProps), {}, {
  children: import_prop_types5.default.node.isRequired,
  formatAbbr: import_prop_types5.default.func,
  maxDateTransform: import_prop_types5.default.func.isRequired,
  minDateTransform: import_prop_types5.default.func.isRequired
});

// node_modules/react-calendar/dist/esm/CenturyView/Decade.js
var _excluded3 = ["classes", "formatYear"];
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys4(Object(source), true).forEach(function(key) {
      _defineProperty5(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys4(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty5(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectWithoutProperties3(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose3(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var className2 = "react-calendar__century-view__decades__decade";
function Decade(_ref) {
  var classes = _ref.classes, _ref$formatYear = _ref.formatYear, formatYear2 = _ref$formatYear === void 0 ? formatYear : _ref$formatYear, otherProps = _objectWithoutProperties3(_ref, _excluded3);
  var date = otherProps.date, locale = otherProps.locale;
  return import_react5.default.createElement(Tile, _extends3({}, otherProps, {
    classes: [].concat(classes, className2),
    maxDateTransform: getDecadeEnd,
    minDateTransform: getDecadeStart,
    view: "century"
  }), getDecadeLabel(locale, formatYear2, date));
}
Decade.propTypes = _objectSpread4(_objectSpread4({}, tileProps), {}, {
  formatYear: import_prop_types6.default.func
});

// node_modules/react-calendar/dist/esm/CenturyView/Decades.js
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys5(Object(source), true).forEach(function(key) {
      _defineProperty6(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys5(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty6(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
function Decades(props) {
  var activeStartDate = props.activeStartDate;
  var start = getBeginOfCenturyYear(activeStartDate);
  var end = start + 99;
  return import_react6.default.createElement(TileGroup, _extends4({}, props, {
    className: "react-calendar__century-view__decades",
    dateTransform: getDecadeStart,
    dateType: "decade",
    end,
    start,
    step: 10,
    tile: Decade
  }));
}
Decades.propTypes = _objectSpread5({}, tileGroupProps);

// node_modules/react-calendar/dist/esm/CenturyView.js
function CenturyView(props) {
  function renderDecades() {
    return import_react7.default.createElement(Decades, props);
  }
  return import_react7.default.createElement("div", {
    className: "react-calendar__century-view"
  }, renderDecades());
}

// node_modules/react-calendar/dist/esm/DecadeView.js
var import_react10 = __toESM(require_react());

// node_modules/react-calendar/dist/esm/DecadeView/Years.js
var import_react9 = __toESM(require_react());

// node_modules/react-calendar/dist/esm/DecadeView/Year.js
var import_react8 = __toESM(require_react());
var import_prop_types7 = __toESM(require_prop_types());
var _excluded4 = ["classes", "formatYear"];
function ownKeys6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys6(Object(source), true).forEach(function(key) {
      _defineProperty7(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys6(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty7(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends5() {
  _extends5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
function _objectWithoutProperties4(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose4(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var className3 = "react-calendar__decade-view__years__year";
function Year(_ref) {
  var classes = _ref.classes, _ref$formatYear = _ref.formatYear, formatYear2 = _ref$formatYear === void 0 ? formatYear : _ref$formatYear, otherProps = _objectWithoutProperties4(_ref, _excluded4);
  var date = otherProps.date, locale = otherProps.locale;
  return import_react8.default.createElement(Tile, _extends5({}, otherProps, {
    classes: [].concat(classes, className3),
    maxDateTransform: getYearEnd,
    minDateTransform: getYearStart,
    view: "decade"
  }), formatYear2(locale, date));
}
Year.propTypes = _objectSpread6(_objectSpread6({}, tileProps), {}, {
  formatYear: import_prop_types7.default.func
});

// node_modules/react-calendar/dist/esm/DecadeView/Years.js
function ownKeys7(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys7(Object(source), true).forEach(function(key) {
      _defineProperty8(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys7(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty8(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends6() {
  _extends6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
function Years(props) {
  var activeStartDate = props.activeStartDate;
  var start = getBeginOfDecadeYear(activeStartDate);
  var end = start + 9;
  return import_react9.default.createElement(TileGroup, _extends6({}, props, {
    className: "react-calendar__decade-view__years",
    dateTransform: function dateTransform(year) {
      var date = new Date();
      date.setFullYear(year, 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    },
    dateType: "year",
    end,
    start,
    tile: Year
  }));
}
Years.propTypes = _objectSpread7({}, tileGroupProps);

// node_modules/react-calendar/dist/esm/DecadeView.js
function DecadeView(props) {
  function renderYears() {
    return import_react10.default.createElement(Years, props);
  }
  return import_react10.default.createElement("div", {
    className: "react-calendar__decade-view"
  }, renderYears());
}

// node_modules/react-calendar/dist/esm/YearView.js
var import_react13 = __toESM(require_react());

// node_modules/react-calendar/dist/esm/YearView/Months.js
var import_react12 = __toESM(require_react());
var import_prop_types9 = __toESM(require_prop_types());

// node_modules/react-calendar/dist/esm/YearView/Month.js
var import_react11 = __toESM(require_react());
var import_prop_types8 = __toESM(require_prop_types());
var _excluded5 = ["classes", "formatMonth", "formatMonthYear"];
function ownKeys8(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys8(Object(source), true).forEach(function(key) {
      _defineProperty9(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys8(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty9(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends7() {
  _extends7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
function _objectWithoutProperties5(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose5(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var className4 = "react-calendar__year-view__months__month";
function Month(_ref) {
  var classes = _ref.classes, _ref$formatMonth = _ref.formatMonth, formatMonth2 = _ref$formatMonth === void 0 ? formatMonth : _ref$formatMonth, _ref$formatMonthYear = _ref.formatMonthYear, formatMonthYear2 = _ref$formatMonthYear === void 0 ? formatMonthYear : _ref$formatMonthYear, otherProps = _objectWithoutProperties5(_ref, _excluded5);
  var date = otherProps.date, locale = otherProps.locale;
  return import_react11.default.createElement(Tile, _extends7({}, otherProps, {
    classes: [].concat(classes, className4),
    formatAbbr: formatMonthYear2,
    maxDateTransform: getMonthEnd,
    minDateTransform: getMonthStart,
    view: "year"
  }), formatMonth2(locale, date));
}
Month.propTypes = _objectSpread8(_objectSpread8({}, tileProps), {}, {
  formatMonth: import_prop_types8.default.func,
  formatMonthYear: import_prop_types8.default.func
});

// node_modules/react-calendar/dist/esm/YearView/Months.js
function ownKeys9(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread9(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys9(Object(source), true).forEach(function(key) {
      _defineProperty10(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys9(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty10(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends8() {
  _extends8 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
function Months(props) {
  var activeStartDate = props.activeStartDate;
  var start = 0;
  var end = 11;
  var year = getYear(activeStartDate);
  return import_react12.default.createElement(TileGroup, _extends8({}, props, {
    className: "react-calendar__year-view__months",
    dateTransform: function dateTransform(monthIndex) {
      var date = new Date();
      date.setFullYear(year, monthIndex, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    },
    dateType: "month",
    end,
    start,
    tile: Month
  }));
}
Months.propTypes = _objectSpread9(_objectSpread9({}, tileGroupProps), {}, {
  locale: import_prop_types9.default.string
});

// node_modules/react-calendar/dist/esm/YearView.js
function YearView(props) {
  function renderMonths() {
    return import_react13.default.createElement(Months, props);
  }
  return import_react13.default.createElement("div", {
    className: "react-calendar__year-view"
  }, renderMonths());
}

// node_modules/react-calendar/dist/esm/MonthView.js
var import_react19 = __toESM(require_react());
var import_prop_types15 = __toESM(require_prop_types());

// node_modules/react-calendar/dist/esm/MonthView/Days.js
var import_react15 = __toESM(require_react());
var import_prop_types11 = __toESM(require_prop_types());

// node_modules/react-calendar/dist/esm/MonthView/Day.js
var import_react14 = __toESM(require_react());
var import_prop_types10 = __toESM(require_prop_types());
var _excluded6 = ["formatDay", "formatLongDate", "calendarType", "classes", "currentMonthIndex"];
function ownKeys10(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread10(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys10(Object(source), true).forEach(function(key) {
      _defineProperty11(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys10(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty11(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends9() {
  _extends9 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends9.apply(this, arguments);
}
function _objectWithoutProperties6(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose6(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var className5 = "react-calendar__month-view__days__day";
function Day(_ref) {
  var _ref$formatDay = _ref.formatDay, formatDay2 = _ref$formatDay === void 0 ? formatDay : _ref$formatDay, _ref$formatLongDate = _ref.formatLongDate, formatLongDate2 = _ref$formatLongDate === void 0 ? formatLongDate : _ref$formatLongDate, calendarType = _ref.calendarType, classes = _ref.classes, currentMonthIndex = _ref.currentMonthIndex, otherProps = _objectWithoutProperties6(_ref, _excluded6);
  var date = otherProps.date, locale = otherProps.locale;
  return import_react14.default.createElement(Tile, _extends9({}, otherProps, {
    classes: [].concat(classes, className5, isWeekend(date, calendarType) ? "".concat(className5, "--weekend") : null, date.getMonth() !== currentMonthIndex ? "".concat(className5, "--neighboringMonth") : null),
    formatAbbr: formatLongDate2,
    maxDateTransform: getDayEnd,
    minDateTransform: getDayStart,
    view: "month"
  }), formatDay2(locale, date));
}
Day.propTypes = _objectSpread10(_objectSpread10({}, tileProps), {}, {
  currentMonthIndex: import_prop_types10.default.number.isRequired,
  formatDay: import_prop_types10.default.func,
  formatLongDate: import_prop_types10.default.func
});

// node_modules/react-calendar/dist/esm/MonthView/Days.js
var _excluded7 = ["showFixedNumberOfWeeks", "showNeighboringMonth"];
function ownKeys11(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread11(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys11(Object(source), true).forEach(function(key) {
      _defineProperty12(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys11(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty12(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends10() {
  _extends10 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
function _objectWithoutProperties7(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose7(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Days(props) {
  var activeStartDate = props.activeStartDate, calendarType = props.calendarType;
  var showFixedNumberOfWeeks = props.showFixedNumberOfWeeks, showNeighboringMonth = props.showNeighboringMonth, otherProps = _objectWithoutProperties7(props, _excluded7);
  var year = getYear(activeStartDate);
  var monthIndex = getMonth(activeStartDate);
  var hasFixedNumberOfWeeks = showFixedNumberOfWeeks || showNeighboringMonth;
  var dayOfWeek = getDayOfWeek(activeStartDate, calendarType);
  var offset = hasFixedNumberOfWeeks ? 0 : dayOfWeek;
  var start = (hasFixedNumberOfWeeks ? -dayOfWeek : 0) + 1;
  var end = function() {
    if (showFixedNumberOfWeeks) {
      return start + 6 * 7 - 1;
    }
    var daysInMonth = getDaysInMonth(activeStartDate);
    if (showNeighboringMonth) {
      var activeEndDate = new Date();
      activeEndDate.setFullYear(year, monthIndex, daysInMonth);
      activeEndDate.setHours(0, 0, 0, 0);
      var daysUntilEndOfTheWeek = 7 - getDayOfWeek(activeEndDate, calendarType) - 1;
      return daysInMonth + daysUntilEndOfTheWeek;
    }
    return daysInMonth;
  }();
  return import_react15.default.createElement(TileGroup, _extends10({}, otherProps, {
    className: "react-calendar__month-view__days",
    count: 7,
    currentMonthIndex: monthIndex,
    dateTransform: function dateTransform(day) {
      var date = new Date();
      date.setFullYear(year, monthIndex, day);
      date.setHours(0, 0, 0, 0);
      return date;
    },
    dateType: "day",
    end,
    offset,
    start,
    tile: Day
  }));
}
Days.propTypes = _objectSpread11({
  calendarType: isCalendarType.isRequired,
  showFixedNumberOfWeeks: import_prop_types11.default.bool,
  showNeighboringMonth: import_prop_types11.default.bool
}, tileGroupProps);

// node_modules/react-calendar/dist/esm/MonthView/Weekdays.js
var import_react16 = __toESM(require_react());
var import_prop_types12 = __toESM(require_prop_types());
var className6 = "react-calendar__month-view__weekdays";
function Weekdays(props) {
  var calendarType = props.calendarType, _props$formatShortWee = props.formatShortWeekday, formatShortWeekday2 = _props$formatShortWee === void 0 ? formatShortWeekday : _props$formatShortWee, locale = props.locale, onMouseLeave = props.onMouseLeave;
  var anyDate = new Date();
  var beginOfMonth = getMonthStart(anyDate);
  var year = getYear(beginOfMonth);
  var monthIndex = getMonth(beginOfMonth);
  var weekdays = [];
  for (var weekday = 1; weekday <= 7; weekday += 1) {
    var weekdayDate = new Date(year, monthIndex, weekday - getDayOfWeek(beginOfMonth, calendarType));
    var abbr = formatWeekday(locale, weekdayDate);
    weekdays.push(import_react16.default.createElement("div", {
      key: weekday,
      className: "".concat(className6, "__weekday")
    }, import_react16.default.createElement("abbr", {
      "aria-label": abbr,
      title: abbr
    }, formatShortWeekday2(locale, weekdayDate).replace(".", ""))));
  }
  return import_react16.default.createElement(Flex, {
    className: className6,
    count: 7,
    onFocus: onMouseLeave,
    onMouseOver: onMouseLeave
  }, weekdays);
}
Weekdays.propTypes = {
  calendarType: isCalendarType.isRequired,
  formatShortWeekday: import_prop_types12.default.func,
  locale: import_prop_types12.default.string,
  onMouseLeave: import_prop_types12.default.func
};

// node_modules/react-calendar/dist/esm/MonthView/WeekNumbers.js
var import_react18 = __toESM(require_react());
var import_prop_types14 = __toESM(require_prop_types());

// node_modules/react-calendar/dist/esm/MonthView/WeekNumber.js
var import_react17 = __toESM(require_react());
var import_prop_types13 = __toESM(require_prop_types());
var _excluded8 = ["date", "onClickWeekNumber", "weekNumber"];
function _extends11() {
  _extends11 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
function ownKeys12(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread12(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys12(Object(source), true).forEach(function(key) {
      _defineProperty13(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys12(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty13(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties8(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose8(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var className7 = "react-calendar__tile";
function WeekNumber(_ref) {
  var date = _ref.date, onClickWeekNumber = _ref.onClickWeekNumber, weekNumber = _ref.weekNumber, otherProps = _objectWithoutProperties8(_ref, _excluded8);
  var props = _objectSpread12({
    className: className7
  }, otherProps);
  var children = import_react17.default.createElement("span", null, weekNumber);
  return onClickWeekNumber ? import_react17.default.createElement("button", _extends11({}, props, {
    onClick: function onClick(event) {
      return onClickWeekNumber(weekNumber, date, event);
    },
    type: "button"
  }), children) : import_react17.default.createElement("div", props, children);
}
WeekNumber.propTypes = {
  date: import_prop_types13.default.instanceOf(Date).isRequired,
  onClickWeekNumber: import_prop_types13.default.func,
  weekNumber: import_prop_types13.default.node.isRequired
};

// node_modules/react-calendar/dist/esm/MonthView/WeekNumbers.js
function WeekNumbers(props) {
  var activeStartDate = props.activeStartDate, calendarType = props.calendarType, onClickWeekNumber = props.onClickWeekNumber, onMouseLeave = props.onMouseLeave, showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;
  var numberOfWeeks = function() {
    if (showFixedNumberOfWeeks) {
      return 6;
    }
    var numberOfDays = getDaysInMonth(activeStartDate);
    var startWeekday = getDayOfWeek(activeStartDate, calendarType);
    var days = numberOfDays - (7 - startWeekday);
    return 1 + Math.ceil(days / 7);
  }();
  var dates = function() {
    var year = getYear(activeStartDate);
    var monthIndex = getMonth(activeStartDate);
    var day = getDate(activeStartDate);
    var result = [];
    for (var index = 0; index < numberOfWeeks; index += 1) {
      result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));
    }
    return result;
  }();
  var weekNumbers = dates.map(function(date) {
    return getWeekNumber(date, calendarType);
  });
  return import_react18.default.createElement(Flex, {
    className: "react-calendar__month-view__weekNumbers",
    count: numberOfWeeks,
    direction: "column",
    onFocus: onMouseLeave,
    onMouseOver: onMouseLeave,
    style: {
      flexBasis: "calc(100% * (1 / 8)",
      flexShrink: 0
    }
  }, weekNumbers.map(function(weekNumber, weekIndex) {
    return import_react18.default.createElement(WeekNumber, {
      key: weekNumber,
      date: dates[weekIndex],
      onClickWeekNumber,
      weekNumber
    });
  }));
}
WeekNumbers.propTypes = {
  activeStartDate: import_prop_types14.default.instanceOf(Date).isRequired,
  calendarType: isCalendarType.isRequired,
  onClickWeekNumber: import_prop_types14.default.func,
  onMouseLeave: import_prop_types14.default.func,
  showFixedNumberOfWeeks: import_prop_types14.default.bool
};

// node_modules/react-calendar/dist/esm/MonthView.js
var _excluded9 = ["calendarType", "formatShortWeekday", "onClickWeekNumber", "showWeekNumbers"];
function _extends12() {
  _extends12 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
function _objectWithoutProperties9(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose9(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function getCalendarTypeFromLocale(locale) {
  return Object.keys(CALENDAR_TYPE_LOCALES).find(function(calendarType) {
    return CALENDAR_TYPE_LOCALES[calendarType].includes(locale);
  }) || CALENDAR_TYPES.ISO_8601;
}
function MonthView(props) {
  var activeStartDate = props.activeStartDate, locale = props.locale, onMouseLeave = props.onMouseLeave, showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;
  var _props$calendarType = props.calendarType, calendarType = _props$calendarType === void 0 ? getCalendarTypeFromLocale(locale) : _props$calendarType, formatShortWeekday2 = props.formatShortWeekday, onClickWeekNumber = props.onClickWeekNumber, showWeekNumbers = props.showWeekNumbers, childProps = _objectWithoutProperties9(props, _excluded9);
  function renderWeekdays() {
    return import_react19.default.createElement(Weekdays, {
      calendarType,
      formatShortWeekday: formatShortWeekday2,
      locale,
      onMouseLeave
    });
  }
  function renderWeekNumbers() {
    if (!showWeekNumbers) {
      return null;
    }
    return import_react19.default.createElement(WeekNumbers, {
      activeStartDate,
      calendarType,
      onClickWeekNumber,
      onMouseLeave,
      showFixedNumberOfWeeks
    });
  }
  function renderDays() {
    return import_react19.default.createElement(Days, _extends12({
      calendarType
    }, childProps));
  }
  var className8 = "react-calendar__month-view";
  return import_react19.default.createElement("div", {
    className: mergeClassNames(className8, showWeekNumbers ? "".concat(className8, "--weekNumbers") : "")
  }, import_react19.default.createElement("div", {
    style: {
      display: "flex",
      alignItems: "flex-end"
    }
  }, renderWeekNumbers(), import_react19.default.createElement("div", {
    style: {
      flexGrow: 1,
      width: "100%"
    }
  }, renderWeekdays(), renderDays())));
}
MonthView.propTypes = {
  activeStartDate: import_prop_types15.default.instanceOf(Date).isRequired,
  calendarType: isCalendarType,
  formatShortWeekday: import_prop_types15.default.func,
  locale: import_prop_types15.default.string,
  onClickWeekNumber: import_prop_types15.default.func,
  onMouseLeave: import_prop_types15.default.func,
  showFixedNumberOfWeeks: import_prop_types15.default.bool,
  showWeekNumbers: import_prop_types15.default.bool
};

// node_modules/react-calendar/dist/esm/Calendar.js
var _excluded10 = ["activeStartDate", "defaultActiveStartDate", "defaultValue", "defaultView", "maxDetail", "minDetail", "value", "view"];
function _extends13() {
  _extends13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends13.apply(this, arguments);
}
function _typeof3(obj) {
  "@babel/helpers - typeof";
  return _typeof3 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof3(obj);
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result);
  };
}
function _possibleConstructorReturn2(self, call) {
  if (call && (_typeof3(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized2(self);
}
function _assertThisInitialized2(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function ownKeys13(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread13(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys13(Object(source), true).forEach(function(key) {
      _defineProperty14(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys13(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty14(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties10(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose10(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose10(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray3(arr);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
var defaultMinDate = new Date();
defaultMinDate.setFullYear(1, 0, 1);
defaultMinDate.setHours(0, 0, 0, 0);
var defaultMaxDate = new Date(864e13);
var baseClassName = "react-calendar";
var allViews2 = ["century", "decade", "year", "month"];
var allValueTypes = [].concat(_toConsumableArray3(allViews2.slice(1)), ["day"]);
function toDate(value) {
  if (value instanceof Date) {
    return value;
  }
  return new Date(value);
}
function getLimitedViews(minDetail, maxDetail) {
  return allViews2.slice(allViews2.indexOf(minDetail), allViews2.indexOf(maxDetail) + 1);
}
function isViewAllowed(view, minDetail, maxDetail) {
  var views = getLimitedViews(minDetail, maxDetail);
  return views.indexOf(view) !== -1;
}
function getView(view, minDetail, maxDetail) {
  if (isViewAllowed(view, minDetail, maxDetail)) {
    return view;
  }
  return maxDetail;
}
function getValueType(maxDetail) {
  return allValueTypes[allViews2.indexOf(maxDetail)];
}
function getValue2(value, index) {
  if (!value) {
    return null;
  }
  var rawValue = Array.isArray(value) && value.length === 2 ? value[index] : value;
  if (!rawValue) {
    return null;
  }
  var valueDate = toDate(rawValue);
  if (isNaN(valueDate.getTime())) {
    throw new Error("Invalid date: ".concat(value));
  }
  return valueDate;
}
function getDetailValue(_ref, index) {
  var value = _ref.value, minDate = _ref.minDate, maxDate = _ref.maxDate, maxDetail = _ref.maxDetail;
  var valuePiece = getValue2(value, index);
  if (!valuePiece) {
    return null;
  }
  var valueType = getValueType(maxDetail);
  var detailValueFrom = [getBegin, getEnd][index](valueType, valuePiece);
  return between(detailValueFrom, minDate, maxDate);
}
var getDetailValueFrom = function getDetailValueFrom2(args) {
  return getDetailValue(args, 0);
};
var getDetailValueTo = function getDetailValueTo2(args) {
  return getDetailValue(args, 1);
};
var getDetailValueArray = function getDetailValueArray2(args) {
  var value = args.value;
  if (Array.isArray(value)) {
    return value;
  }
  return [getDetailValueFrom, getDetailValueTo].map(function(fn) {
    return fn(args);
  });
};
function getActiveStartDate(props) {
  var maxDate = props.maxDate, maxDetail = props.maxDetail, minDate = props.minDate, minDetail = props.minDetail, value = props.value, view = props.view;
  var rangeType = getView(view, minDetail, maxDetail);
  var valueFrom = getDetailValueFrom({
    value,
    minDate,
    maxDate,
    maxDetail
  }) || new Date();
  return getBegin(rangeType, valueFrom);
}
function getInitialActiveStartDate(props) {
  var activeStartDate = props.activeStartDate, defaultActiveStartDate = props.defaultActiveStartDate, defaultValue = props.defaultValue, defaultView = props.defaultView, maxDetail = props.maxDetail, minDetail = props.minDetail, value = props.value, view = props.view, otherProps = _objectWithoutProperties10(props, _excluded10);
  var rangeType = getView(view, minDetail, maxDetail);
  var valueFrom = activeStartDate || defaultActiveStartDate;
  if (valueFrom) {
    return getBegin(rangeType, valueFrom);
  }
  return getActiveStartDate(_objectSpread13({
    maxDetail,
    minDetail,
    value: value || defaultValue,
    view: view || defaultView
  }, otherProps));
}
var getIsSingleValue = function getIsSingleValue2(value) {
  return value && [].concat(value).length === 1;
};
var Calendar = function(_Component) {
  _inherits2(Calendar2, _Component);
  var _super = _createSuper2(Calendar2);
  function Calendar2() {
    var _this;
    _classCallCheck2(this, Calendar2);
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(_args));
    _defineProperty14(_assertThisInitialized2(_this), "state", {
      activeStartDate: _this.props.defaultActiveStartDate,
      value: _this.props.defaultValue,
      view: _this.props.defaultView
    });
    _defineProperty14(_assertThisInitialized2(_this), "setStateAndCallCallbacks", function(nextState, event, callback) {
      var _assertThisInitialize = _assertThisInitialized2(_this), previousActiveStartDate = _assertThisInitialize.activeStartDate, previousView = _assertThisInitialize.view;
      var _this$props = _this.props, allowPartialRange = _this$props.allowPartialRange, onActiveStartDateChange = _this$props.onActiveStartDateChange, onChange = _this$props.onChange, onViewChange = _this$props.onViewChange, selectRange = _this$props.selectRange;
      var prevArgs = {
        activeStartDate: previousActiveStartDate,
        view: previousView
      };
      _this.setState(nextState, function() {
        var args = {
          action: nextState.action,
          activeStartDate: nextState.activeStartDate || _this.activeStartDate,
          value: nextState.value || _this.value,
          view: nextState.view || _this.view
        };
        function shouldUpdate(key) {
          return key in nextState && (_typeof3(nextState[key]) !== _typeof3(prevArgs[key]) || (nextState[key] instanceof Date ? nextState[key].getTime() !== prevArgs[key].getTime() : nextState[key] !== prevArgs[key]));
        }
        if (shouldUpdate("activeStartDate")) {
          if (onActiveStartDateChange)
            onActiveStartDateChange(args);
        }
        if (shouldUpdate("view")) {
          if (onViewChange)
            onViewChange(args);
        }
        if (shouldUpdate("value")) {
          if (onChange) {
            if (selectRange) {
              var isSingleValue = getIsSingleValue(nextState.value);
              if (!isSingleValue) {
                onChange(nextState.value, event);
              } else if (allowPartialRange) {
                onChange([nextState.value], event);
              }
            } else {
              onChange(nextState.value, event);
            }
          }
        }
        if (callback)
          callback(args);
      });
    });
    _defineProperty14(_assertThisInitialized2(_this), "setActiveStartDate", function(nextActiveStartDate, action) {
      _this.setStateAndCallCallbacks({
        action,
        activeStartDate: nextActiveStartDate
      });
    });
    _defineProperty14(_assertThisInitialized2(_this), "drillDown", function(nextActiveStartDate, event) {
      if (!_this.drillDownAvailable) {
        return;
      }
      _this.onClickTile(nextActiveStartDate, event);
      var _assertThisInitialize2 = _assertThisInitialized2(_this), view = _assertThisInitialize2.view, views = _assertThisInitialize2.views;
      var onDrillDown = _this.props.onDrillDown;
      var nextView = views[views.indexOf(view) + 1];
      _this.setStateAndCallCallbacks({
        action: "drillDown",
        activeStartDate: nextActiveStartDate,
        view: nextView
      }, void 0, onDrillDown);
    });
    _defineProperty14(_assertThisInitialized2(_this), "drillUp", function() {
      if (!_this.drillUpAvailable) {
        return;
      }
      var _assertThisInitialize3 = _assertThisInitialized2(_this), activeStartDate = _assertThisInitialize3.activeStartDate, view = _assertThisInitialize3.view, views = _assertThisInitialize3.views;
      var onDrillUp = _this.props.onDrillUp;
      var nextView = views[views.indexOf(view) - 1];
      var nextActiveStartDate = getBegin(nextView, activeStartDate);
      _this.setStateAndCallCallbacks({
        action: "drillUp",
        activeStartDate: nextActiveStartDate,
        view: nextView
      }, void 0, onDrillUp);
    });
    _defineProperty14(_assertThisInitialized2(_this), "onChange", function(value, event) {
      var selectRange = _this.props.selectRange;
      _this.onClickTile(value, event);
      var nextValue;
      if (selectRange) {
        var _assertThisInitialize4 = _assertThisInitialized2(_this), previousValue = _assertThisInitialize4.value, valueType = _assertThisInitialize4.valueType;
        if (!getIsSingleValue(previousValue)) {
          nextValue = getBegin(valueType, value);
        } else {
          nextValue = getValueRange(valueType, previousValue, value);
        }
      } else {
        nextValue = _this.getProcessedValue(value);
      }
      var nextActiveStartDate = getActiveStartDate(_objectSpread13(_objectSpread13({}, _this.props), {}, {
        value: nextValue
      }));
      event.persist();
      _this.setStateAndCallCallbacks({
        action: "onChange",
        activeStartDate: nextActiveStartDate,
        value: nextValue
      }, event);
    });
    _defineProperty14(_assertThisInitialized2(_this), "onClickTile", function(value, event) {
      var _assertThisInitialize5 = _assertThisInitialized2(_this), view = _assertThisInitialize5.view;
      var _this$props2 = _this.props, onClickDay = _this$props2.onClickDay, onClickDecade = _this$props2.onClickDecade, onClickMonth = _this$props2.onClickMonth, onClickYear = _this$props2.onClickYear;
      var callback = function() {
        switch (view) {
          case "century":
            return onClickDecade;
          case "decade":
            return onClickYear;
          case "year":
            return onClickMonth;
          case "month":
            return onClickDay;
          default:
            throw new Error("Invalid view: ".concat(view, "."));
        }
      }();
      if (callback)
        callback(value, event);
    });
    _defineProperty14(_assertThisInitialized2(_this), "onMouseOver", function(value) {
      _this.setState(function(prevState) {
        if (prevState.hover && prevState.hover.getTime() === value.getTime()) {
          return null;
        }
        return {
          hover: value
        };
      });
    });
    _defineProperty14(_assertThisInitialized2(_this), "onMouseLeave", function() {
      _this.setState({
        hover: null
      });
    });
    return _this;
  }
  _createClass2(Calendar2, [{
    key: "activeStartDate",
    get: function get() {
      var activeStartDateProps = this.props.activeStartDate;
      var activeStartDateState = this.state.activeStartDate;
      return activeStartDateProps || activeStartDateState || getInitialActiveStartDate(this.props);
    }
  }, {
    key: "value",
    get: function get() {
      var _this$props3 = this.props, selectRange = _this$props3.selectRange, valueProps = _this$props3.value;
      var valueState = this.state.value;
      if (selectRange && getIsSingleValue(valueState)) {
        return valueState;
      }
      return valueProps !== void 0 ? valueProps : valueState;
    }
  }, {
    key: "valueType",
    get: function get() {
      var maxDetail = this.props.maxDetail;
      return getValueType(maxDetail);
    }
  }, {
    key: "view",
    get: function get() {
      var _this$props4 = this.props, minDetail = _this$props4.minDetail, maxDetail = _this$props4.maxDetail, viewProps = _this$props4.view;
      var viewState = this.state.view;
      return getView(viewProps || viewState, minDetail, maxDetail);
    }
  }, {
    key: "views",
    get: function get() {
      var _this$props5 = this.props, minDetail = _this$props5.minDetail, maxDetail = _this$props5.maxDetail;
      return getLimitedViews(minDetail, maxDetail);
    }
  }, {
    key: "hover",
    get: function get() {
      var selectRange = this.props.selectRange;
      var hover = this.state.hover;
      return selectRange ? hover : null;
    }
  }, {
    key: "drillDownAvailable",
    get: function get() {
      var view = this.view, views = this.views;
      return views.indexOf(view) < views.length - 1;
    }
  }, {
    key: "drillUpAvailable",
    get: function get() {
      var view = this.view, views = this.views;
      return views.indexOf(view) > 0;
    }
  }, {
    key: "getProcessedValue",
    value: function getProcessedValue(value) {
      var _this$props6 = this.props, minDate = _this$props6.minDate, maxDate = _this$props6.maxDate, maxDetail = _this$props6.maxDetail, returnValue = _this$props6.returnValue;
      var processFunction = function() {
        switch (returnValue) {
          case "start":
            return getDetailValueFrom;
          case "end":
            return getDetailValueTo;
          case "range":
            return getDetailValueArray;
          default:
            throw new Error("Invalid returnValue.");
        }
      }();
      return processFunction({
        value,
        minDate,
        maxDate,
        maxDetail
      });
    }
  }, {
    key: "renderContent",
    value: function renderContent(next) {
      var currentActiveStartDate = this.activeStartDate, onMouseOver = this.onMouseOver, valueType = this.valueType, value = this.value, view = this.view;
      var _this$props7 = this.props, calendarType = _this$props7.calendarType, locale = _this$props7.locale, maxDate = _this$props7.maxDate, minDate = _this$props7.minDate, selectRange = _this$props7.selectRange, tileClassName = _this$props7.tileClassName, tileContent = _this$props7.tileContent, tileDisabled = _this$props7.tileDisabled;
      var hover = this.hover;
      var activeStartDate = next ? getBeginNext(view, currentActiveStartDate) : getBegin(view, currentActiveStartDate);
      var onClick = this.drillDownAvailable ? this.drillDown : this.onChange;
      var commonProps = {
        activeStartDate,
        hover,
        locale,
        maxDate,
        minDate,
        onClick,
        onMouseOver: selectRange ? onMouseOver : null,
        tileClassName,
        tileContent,
        tileDisabled,
        value,
        valueType
      };
      switch (view) {
        case "century": {
          var formatYear2 = this.props.formatYear;
          return import_react20.default.createElement(CenturyView, _extends13({
            formatYear: formatYear2
          }, commonProps));
        }
        case "decade": {
          var _formatYear = this.props.formatYear;
          return import_react20.default.createElement(DecadeView, _extends13({
            formatYear: _formatYear
          }, commonProps));
        }
        case "year": {
          var _this$props8 = this.props, formatMonth2 = _this$props8.formatMonth, formatMonthYear2 = _this$props8.formatMonthYear;
          return import_react20.default.createElement(YearView, _extends13({
            formatMonth: formatMonth2,
            formatMonthYear: formatMonthYear2
          }, commonProps));
        }
        case "month": {
          var _this$props9 = this.props, formatDay2 = _this$props9.formatDay, formatLongDate2 = _this$props9.formatLongDate, formatShortWeekday2 = _this$props9.formatShortWeekday, onClickWeekNumber = _this$props9.onClickWeekNumber, showDoubleView = _this$props9.showDoubleView, showFixedNumberOfWeeks = _this$props9.showFixedNumberOfWeeks, showNeighboringMonth = _this$props9.showNeighboringMonth, showWeekNumbers = _this$props9.showWeekNumbers;
          var onMouseLeave = this.onMouseLeave;
          return import_react20.default.createElement(MonthView, _extends13({
            calendarType,
            formatDay: formatDay2,
            formatLongDate: formatLongDate2,
            formatShortWeekday: formatShortWeekday2,
            onClickWeekNumber,
            onMouseLeave: selectRange ? onMouseLeave : null,
            showFixedNumberOfWeeks: typeof showFixedNumberOfWeeks !== "undefined" ? showFixedNumberOfWeeks : showDoubleView,
            showNeighboringMonth,
            showWeekNumbers
          }, commonProps));
        }
        default:
          throw new Error("Invalid view: ".concat(view, "."));
      }
    }
  }, {
    key: "renderNavigation",
    value: function renderNavigation() {
      var showNavigation = this.props.showNavigation;
      if (!showNavigation) {
        return null;
      }
      var activeStartDate = this.activeStartDate, view = this.view, views = this.views;
      var _this$props10 = this.props, formatMonthYear2 = _this$props10.formatMonthYear, formatYear2 = _this$props10.formatYear, locale = _this$props10.locale, maxDate = _this$props10.maxDate, minDate = _this$props10.minDate, navigationAriaLabel = _this$props10.navigationAriaLabel, navigationAriaLive = _this$props10.navigationAriaLive, navigationLabel = _this$props10.navigationLabel, next2AriaLabel = _this$props10.next2AriaLabel, next2Label = _this$props10.next2Label, nextAriaLabel = _this$props10.nextAriaLabel, nextLabel = _this$props10.nextLabel, prev2AriaLabel = _this$props10.prev2AriaLabel, prev2Label = _this$props10.prev2Label, prevAriaLabel = _this$props10.prevAriaLabel, prevLabel = _this$props10.prevLabel, showDoubleView = _this$props10.showDoubleView;
      return import_react20.default.createElement(Navigation, {
        activeStartDate,
        drillUp: this.drillUp,
        formatMonthYear: formatMonthYear2,
        formatYear: formatYear2,
        locale,
        maxDate,
        minDate,
        navigationAriaLabel,
        navigationAriaLive,
        navigationLabel,
        next2AriaLabel,
        next2Label,
        nextAriaLabel,
        nextLabel,
        prev2AriaLabel,
        prev2Label,
        prevAriaLabel,
        prevLabel,
        setActiveStartDate: this.setActiveStartDate,
        showDoubleView,
        view,
        views
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props11 = this.props, className8 = _this$props11.className, inputRef = _this$props11.inputRef, selectRange = _this$props11.selectRange, showDoubleView = _this$props11.showDoubleView;
      var onMouseLeave = this.onMouseLeave, value = this.value;
      var valueArray = [].concat(value);
      return import_react20.default.createElement("div", {
        className: mergeClassNames(baseClassName, selectRange && valueArray.length === 1 && "".concat(baseClassName, "--selectRange"), showDoubleView && "".concat(baseClassName, "--doubleView"), className8),
        ref: inputRef
      }, this.renderNavigation(), import_react20.default.createElement("div", {
        className: "".concat(baseClassName, "__viewContainer"),
        onBlur: selectRange ? onMouseLeave : null,
        onMouseLeave: selectRange ? onMouseLeave : null
      }, this.renderContent(), showDoubleView && this.renderContent(true)));
    }
  }]);
  return Calendar2;
}(import_react20.Component);
Calendar.defaultProps = {
  maxDate: defaultMaxDate,
  maxDetail: "month",
  minDate: defaultMinDate,
  minDetail: "century",
  returnValue: "start",
  showNavigation: true,
  showNeighboringMonth: true
};
var isActiveStartDate = import_prop_types16.default.instanceOf(Date);
var isLooseValue = import_prop_types16.default.oneOfType([import_prop_types16.default.string, isValue]);
Calendar.propTypes = {
  activeStartDate: isActiveStartDate,
  allowPartialRange: import_prop_types16.default.bool,
  calendarType: isCalendarType,
  className: isClassName,
  defaultActiveStartDate: isActiveStartDate,
  defaultValue: isLooseValue,
  defaultView: isView,
  formatDay: import_prop_types16.default.func,
  formatLongDate: import_prop_types16.default.func,
  formatMonth: import_prop_types16.default.func,
  formatMonthYear: import_prop_types16.default.func,
  formatShortWeekday: import_prop_types16.default.func,
  formatYear: import_prop_types16.default.func,
  inputRef: isRef,
  locale: import_prop_types16.default.string,
  maxDate: isMaxDate,
  maxDetail: import_prop_types16.default.oneOf(allViews2),
  minDate: isMinDate,
  minDetail: import_prop_types16.default.oneOf(allViews2),
  navigationAriaLabel: import_prop_types16.default.string,
  navigationAriaLive: import_prop_types16.default.oneOf(["off", "polite", "assertive"]),
  navigationLabel: import_prop_types16.default.func,
  next2AriaLabel: import_prop_types16.default.string,
  next2Label: import_prop_types16.default.node,
  nextAriaLabel: import_prop_types16.default.string,
  nextLabel: import_prop_types16.default.node,
  onActiveStartDateChange: import_prop_types16.default.func,
  onChange: import_prop_types16.default.func,
  onClickDay: import_prop_types16.default.func,
  onClickDecade: import_prop_types16.default.func,
  onClickMonth: import_prop_types16.default.func,
  onClickWeekNumber: import_prop_types16.default.func,
  onClickYear: import_prop_types16.default.func,
  onDrillDown: import_prop_types16.default.func,
  onDrillUp: import_prop_types16.default.func,
  onViewChange: import_prop_types16.default.func,
  prev2AriaLabel: import_prop_types16.default.string,
  prev2Label: import_prop_types16.default.node,
  prevAriaLabel: import_prop_types16.default.string,
  prevLabel: import_prop_types16.default.node,
  returnValue: import_prop_types16.default.oneOf(["start", "end", "range"]),
  selectRange: import_prop_types16.default.bool,
  showDoubleView: import_prop_types16.default.bool,
  showFixedNumberOfWeeks: import_prop_types16.default.bool,
  showNavigation: import_prop_types16.default.bool,
  showNeighboringMonth: import_prop_types16.default.bool,
  showWeekNumbers: import_prop_types16.default.bool,
  tileClassName: import_prop_types16.default.oneOfType([import_prop_types16.default.func, isClassName]),
  tileContent: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.node]),
  tileDisabled: import_prop_types16.default.func,
  value: isLooseValue,
  view: isView
};

// node_modules/react-calendar/dist/esm/index.js
var esm_default2 = Calendar;

// dep:react-calendar
var react_calendar_default = esm_default2;
export {
  Calendar,
  CenturyView,
  DecadeView,
  MonthView,
  YearView,
  react_calendar_default as default
};
//# sourceMappingURL=react-calendar.js.map
